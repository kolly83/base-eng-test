name: Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    env:
      TF_IN_AUTOMATION: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install pipenv and dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Package application
        run: |
          mkdir -p package
          cp -r src/* package/
          pip install -r src/requirements.txt -t package/
          cd package
          zip -r ../lambda_function.zip .
          cd ..
        shell: /usr/bin/bash -e {0}  
      
      - name: Configure Git
        run: |
          git config --global user.email "kolly22@gmail.com"
          git config --global user.name "Gabor Keller"

      - name: Stash local changes
        run: git stash --include-untracked

      - name: Pull latest changes
        run: git pull origin main

      - name: Apply stashed changes
        run: git stash pop || true        

      - name: Add ZIP to repository
        run: |
          git add lambda_function.zip
          git commit -m "Add lambda_function.zip to repository"

      - name: Push changes
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify ZIP file exists
        run: |
          echo "Current directory: $(pwd)"
          ls -l
          echo "Full path to ZIP file:"
          echo "$(pwd)/lambda_function.zip"
          echo "Contents of package:"
          unzip -l lambda_function.zip          
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3
          terraform_wrapper: true
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  
      - name: Terraform Init
        run: terraform init -reconfigure -backend-config="token=${{ secrets.TF_API_TOKEN }}" -compact-warnings
        working-directory: infrastructure/
  
      - name: Terraform Validate
        run: terraform validate -no-color -compact-warnings
        working-directory: infrastructure/
  
      - name: Print working directory
        run: pwd
        working-directory: infrastructure/

      - name: List files
        run: ls -l
        working-directory: infrastructure/

